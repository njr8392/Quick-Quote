{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasrodgers/go/src/github.com/njr8392/quotesys/client/src/Quote.js\";\nimport React from 'react';\n\nfunction Quotes() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [name, setName] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"https://api.example.com/items\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setName(result.Name);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, name.Name));\n  }\n}\n\nexport default Quote;","map":{"version":3,"sources":["/Users/nicholasrodgers/go/src/github.com/njr8392/quotesys/client/src/Quote.js"],"names":["React","Quotes","error","setError","useState","isLoaded","setIsLoaded","name","setName","useEffect","fetch","then","res","json","result","Name","message","Quote"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,SAASC,MAAT,GAAiB;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BF,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC,CAHa,CAKb;AACA;AACA;;AACAK,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,OAAO,CAACM,MAAM,CAACC,IAAR,CAAP;AACD,KANL,EAOI;AACA;AACA;AACCb,IAAAA,KAAD,IAAW;AACTI,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAH,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACc,OAAnB,CAAP;AACD,GAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKE,IAAI,CAACQ,IAAV,CADJ,CADF;AAKD;AACF;;AACH,eAAeE,KAAf","sourcesContent":["import React from 'react';\nfunction Quotes(){\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [name, setName] = useState([]);\n  \n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n      fetch(\"https://api.example.com/items\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setName(result.Name);\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n    }, [])\n  \n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n            <li>{name.Name}</li>\n        </ul>\n      );\n    }\n  }\nexport default Quote;"]},"metadata":{},"sourceType":"module"}