{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasrodgers/go/src/github.com/njr8392/quotesys/client/src/Client.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction editClient(client) {\n  fetch(`/client/edit`, {\n    method: \"post\",\n    body: JSON.stringify(client)\n  });\n}\n\nfunction Quotes() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [clients, setClient] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"/client\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setClient(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 10\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }\n    }, clients.map(client => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-header mr-7 p3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, client.Name), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }\n    }, client.Street, \" \", client.City), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }\n    }, client.Email), /*#__PURE__*/React.createElement(Link, {\n      to: `client/edit/${client.Usrid}`,\n      className: \"btn btn-outline-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }\n    }, \"Edit\")))))));\n  }\n}\n\nexport default Quotes;","map":{"version":3,"sources":["/Users/nicholasrodgers/go/src/github.com/njr8392/quotesys/client/src/Client.js"],"names":["React","useState","useEffect","Link","editClient","client","fetch","method","body","JSON","stringify","Quotes","error","setError","isLoaded","setIsLoaded","clients","setClient","then","res","json","result","message","map","Name","Street","City","Email","Usrid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAoB,kBAApB;;AAEA,SAASC,UAAT,CAAoBC,MAApB,EAA2B;AACzBC,EAAAA,KAAK,CAAE,cAAF,EAAgB;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AAFa,GAAhB,CAAL;AAID;;AACD,SAASM,MAAT,GAAkB;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,SAAV,IAAuBhB,QAAQ,CAAC,EAAD,CAArC,CAHiB,CAKjB;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACfI,IAAAA,KAAK,CAAC,SAAD,CAAL,CACEY,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAGGG,MAAD,IAAY;AACXN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACI,MAAD,CAAT;AACA,KANH,EAOE;AACA;AACA;AACCT,IAAAA,KAAD,IAAW;AACVG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,KAbH;AAeA,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACU,OAAnB,CAAP;AACA,GAFD,MAEO,IAAI,CAACR,QAAL,EAAe;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACA,GAFM,MAEA;AACN,wBACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEE,OAAO,CAACO,GAAR,CAAalB,MAAD,iBACZ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,KAAK,EAAC,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCA,MAAM,CAACmB,IAAxC,CADD,eAEC;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEnB,MAAM,CAACoB,MADT,OACkBpB,MAAM,CAACqB,IADzB,CADD,eAIC;AAAG,MAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBrB,MAAM,CAACsB,KAA7B,CAJD,eAKC,oBAAC,IAAD;AACC,MAAA,EAAE,EAAG,eAActB,MAAM,CAACuB,KAAM,EADjC;AAEW,MAAA,SAAS,EAAC,yBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,CAFD,CADD,CADD,CADA,CADF,CADD;AAyBA;AACD;;AACD,eAAejB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link} from \"react-router-dom\";\n\nfunction editClient(client){\n  fetch(`/client/edit`,{\n    method: \"post\",\n    body: JSON.stringify(client)\n  })\n}\nfunction Quotes() {\n\tconst [error, setError] = useState(null);\n\tconst [isLoaded, setIsLoaded] = useState(false);\n\tconst [clients, setClient] = useState([]);\n\n\t// Note: the empty deps array [] means\n\t// this useEffect will run once\n\t// similar to componentDidMount()\n\tuseEffect(() => {\n\t\tfetch(\"/client\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tsetIsLoaded(true);\n\t\t\t\t\tsetClient(result);\n\t\t\t\t},\n\t\t\t\t// Note: it's important to handle errors here\n\t\t\t\t// instead of a catch() block so that we don't swallow\n\t\t\t\t// exceptions from actual bugs in components.\n\t\t\t\t(error) => {\n\t\t\t\t\tsetIsLoaded(true);\n\t\t\t\t\tsetError(error);\n\t\t\t\t}\n\t\t\t);\n\t}, []);\n\n\tif (error) {\n\t\treturn <div>Error: {error.message}</div>;\n\t} else if (!isLoaded) {\n\t\treturn <div>Loading...</div>;\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t{clients.map((client) => (\n\t\t\t\t\t<div className=\"row mt-5 \">\n\t\t\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t\t\t\t<div class=\"card\">\n\t\t\t\t\t\t\t\t<h5 class=\"card-header mr-7 p3\">{client.Name}</h5>\n\t\t\t\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t\t\t<h5 class=\"card-title\">\n\t\t\t\t\t\t\t\t\t\t{client.Street} {client.City}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t<p class=\"card-text\">{client.Email}</p>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={`client/edit/${client.Usrid}`}\n                    className=\"btn btn-outline-primary\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Quotes;\n"]},"metadata":{},"sourceType":"module"}