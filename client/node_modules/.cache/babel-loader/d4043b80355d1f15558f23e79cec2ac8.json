{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasrodgers/go/src/github.com/njr8392/quotesys/client/src/Client.js\";\nimport React, { useState, useEffect } from 'react';\nimport EditClient from \"./components/EditClient\";\nimport { Link } from 'react-router-dom';\n\nfunction Quotes() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [clients, setClient] = useState([]); // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"/client\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setClient(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 2\n      }\n    }, clients.map(client => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-5 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-header mr-7 p3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, client.Name), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      class: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, client.Street, \" \", client.City), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }\n    }, client.Email), /*#__PURE__*/React.createElement(Link, {\n      to: \"/client/edit\",\n      className: \"btn btn-outline-primary\",\n      component: EditClient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, \"Edit\")))))));\n  }\n}\n\nexport default Quotes;","map":{"version":3,"sources":["/Users/nicholasrodgers/go/src/github.com/njr8392/quotesys/client/src/Client.js"],"names":["React","useState","useEffect","EditClient","Link","Quotes","error","setError","isLoaded","setIsLoaded","clients","setClient","fetch","then","res","json","result","message","map","client","Name","Street","City","Email"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,MAAT,GAAiB;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,SAAV,IAAuBV,QAAQ,CAAC,EAAD,CAArC,CAHa,CAKb;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,SAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACK,MAAD,CAAT;AACD,KANL,EAOI;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACW,OAAnB,CAAP;AACD,GAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFM,MAEA;AACL,wBACL;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,OAAO,CAACQ,GAAR,CAAYC,MAAM,iBAClB;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAI,MAAA,KAAK,EAAC,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCA,MAAM,CAACC,IAAxC,CADL,eAEE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBD,MAAM,CAACE,MAA/B,OAAwCF,MAAM,CAACG,IAA/C,CADD,eAEE;AAAG,MAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBH,MAAM,CAACI,KAA7B,CAFF,eAGO,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,cAAX;AAA0B,MAAA,SAAS,EAAE,yBAArC;AAA8D,MAAA,SAAS,EAAEpB,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHP,CAFF,CADD,CADA,CADA,CADH,CADK;AAoBD;AACF;;AACH,eAAeE,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport EditClient from \"./components/EditClient\";\nimport { Link } from 'react-router-dom';\n\nfunction Quotes(){\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [clients, setClient] = useState([]);\n  \n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n      fetch(\"/client\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setClient(result);\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n    }, [])\n  \n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return(\n\t<div className=\"container-fluid\">\n\t\t\t{clients.map(client => (\n    <div className=\"row mt-5 \">\n\t\t\t\t<div className=\"col-sm\">\n\t\t\t\t <div class=\"card\">\n          <h5 class=\"card-header mr-7 p3\">{client.Name}</h5>\n\t\t\t\t   <div class=\"card-body\">\n\t\t\t\t    <h5 class=\"card-title\">{client.Street} {client.City}</h5>\n\t\t\t\t     <p class=\"card-text\">{client.Email}</p>\n              <Link to = \"/client/edit\" className= \"btn btn-outline-primary\"component={EditClient}>\n                Edit\n                </Link>\n\t\t\t\t    </div>\n\t\t\t\t</div>\n\t\t\t      </div>\n\t\t</div>\n\t\t\t     ))}\n\t</div>\n      );\n    }\n  }\nexport default Quotes;\n"]},"metadata":{},"sourceType":"module"}